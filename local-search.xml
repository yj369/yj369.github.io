<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>1. Flutter 计数器 App 分析</title>
    <link href="/2022/06/12/flutter-counter-app/"/>
    <url>/2022/06/12/flutter-counter-app/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Flutter-计数器-App-分析"><a href="#1-Flutter-计数器-App-分析" class="headerlink" title="1. Flutter 计数器 App 分析"></a>1. Flutter 计数器 App 分析</h1><p>在创建完 Flutter 项目之后，项目本身会在 lib 目录下提供一个 main.dart 文件。在 <code>lib/main.dart</code> 文件中，它提供了一个计数器 App 给开发者用于测试和学习。</p><p>在下面的示例中，其就是 <code>main.dart</code> 提供的源代码（去除了comments）。该 App 主要的功能就是在页面的左下角提供一个浮动的按钮用于用户点击，页面的中央则是显示点前用户点击了多少次按钮。</p><p>那么接下来，我们将把下面的示例按照每个 class 来拆分成一个个小部件去理解和分析。从而帮助我们对 Flutter 组件和开发风格有一个初步的认识。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class="hljs-keyword">void</span> main() =&gt; runApp(MyApp());<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyApp</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;<br>  <span class="hljs-meta">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class="hljs-keyword">return</span> MaterialApp(<br>      title: <span class="hljs-string">&#x27;Application Name&#x27;</span>, <br>      theme: ThemeData(<br>        primarySwatch: Colors.pink,<br>      ),<br>      home: MyHomePage(title: <span class="hljs-string">&#x27;My Home Page&#x27;</span>),<br>    );<br>  &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyHomePage</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatefulWidget</span> </span>&#123;<br>  MyHomePage(&#123;Key? key, <span class="hljs-keyword">required</span> <span class="hljs-keyword">this</span>.title&#125;) : <span class="hljs-keyword">super</span>(key: key);<br>  <span class="hljs-keyword">final</span> <span class="hljs-built_in">String</span> title;<br><br>  <span class="hljs-meta">@override</span><br>  _MyHomePageState createState() =&gt; _MyHomePageState();<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_MyHomePageState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">State</span>&lt;<span class="hljs-title">MyHomePage</span>&gt; </span>&#123;<br>  <span class="hljs-built_in">int</span> _counter = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">void</span> _incrementCounter() &#123;<br>    setState(() &#123;<br>      _counter++;<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-meta">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class="hljs-keyword">return</span> Scaffold(<br>      appBar: AppBar(<br>        title: Text(widget.title),<br>      ),<br>      body: Center(<br>        child: Column(<br>          mainAxisAlignment: MainAxisAlignment.center,<br>          children: &lt;Widget&gt;[<br>            Text(<span class="hljs-string">&#x27;You have pushed the button this many times:&#x27;</span>),<br>            Text(<br>              <span class="hljs-string">&#x27;<span class="hljs-subst">$_counter</span>&#x27;</span>,<br>              style: Theme.of(context).textTheme.headline4,<br>            ),<br>          ],<br>        ),<br>      ),<br>      floatingActionButton: FloatingActionButton(<br>        onPressed: _incrementCounter,<br>        tooltip: <span class="hljs-string">&#x27;Increment&#x27;</span>,<br>        child: Icon(Icons.add),<br>      ), <span class="hljs-comment">// This trailing comma makes auto-formatting nicer for build methods.</span><br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-1-Flutter-应用入口"><a href="#1-1-Flutter-应用入口" class="headerlink" title="1.1 Flutter 应用入口"></a>1.1 Flutter 应用入口</h2><p>首先，App 中导入了 <code>material.dart</code> 组件库，该组件库导入了 Material UI 组件库。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;package:flutter/material.dart&#x27;</span>;<br></code></pre></td></tr></table></figure><p>Material UI 是一种标准的移动端和web端的视觉设计语言，Flutter 默认提供了一套丰富的 Material 风格的UI组件。</p><p>类似于 C&#x2F;C++, Java 的应用入口类似，Flutter 应用中也需要提供 <code>main</code> 函数作为程序的入口。main 函数调用一个 <code>runApp</code> 方法，其主要的作用就是用于启动 Flutter 应用。而 runApp 函数接受一个 <code>Widget</code> 参数作为整个应用程序根组件 (MyApp())。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">void</span> main() =&gt; runApp(MyApp());<br></code></pre></td></tr></table></figure><h2 id="1-2-MyApp-根组件分析"><a href="#1-2-MyApp-根组件分析" class="headerlink" title="1.2 MyApp 根组件分析"></a>1.2 MyApp 根组件分析</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyApp</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;<br>  <span class="hljs-meta">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class="hljs-keyword">return</span> MaterialApp(<br>      title: <span class="hljs-string">&#x27;Application Name&#x27;</span>, <br>      theme: ThemeData(<br>        primarySwatch: Colors.pink,<br>      ),<br>      home: MyHomePage(title: <span class="hljs-string">&#x27;My Home Page&#x27;</span>),<br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>首先，App 中的根组件 <code>MyApp</code> 继承于 <code>StatelessWidget</code>(无状态组件)类。</li><li>StatelessWidget 提供一个 build() 方法来描述如何构建 UI 界面，返回一个 Widget 组件。</li><li>因此，build 方法返回了一个 MaterialApp，它是 Material 库中提供的 Flutter APP 框架，通过它可以设置应用的名称、主题、语言、首页及路由列表等。</li><li><code>title</code> 用于设置应用的名字</li><li><code>theme</code> 用于设置 App 的头部的颜色</li><li><code>home</code> 用于设置 App 的首页，它接受一个 widget</li></ul><h2 id="1-3-App-首页的初探"><a href="#1-3-App-首页的初探" class="headerlink" title="1.3 App 首页的初探"></a>1.3 App 首页的初探</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyHomePage</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatefulWidget</span> </span>&#123;<br>  MyHomePage(&#123;Key? key, <span class="hljs-keyword">required</span> <span class="hljs-keyword">this</span>.title&#125;) : <span class="hljs-keyword">super</span>(key: key);<br>  <span class="hljs-keyword">final</span> <span class="hljs-built_in">String</span> title;<br>  <br>  <span class="hljs-meta">@override</span><br>  _MyHomePageState createState() =&gt; _MyHomePageState();<br>&#125;<br></code></pre></td></tr></table></figure><p>MyHomePage 是应用的首页，它继承自StatefulWidget类，表示它是一个有状态的组件</p>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flutter</tag>
      
      <tag>实战</tag>
      
      <tag>移动端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
